@page "/passwordGenerator"
@using System.Text;
@using BL
@inject IAnalytics Analytics
@inject ClipboardService ClipboardService

@using Microsoft.AspNetCore.Components.Web.Extensions.Head
<Meta Property="description" Content="Fundamental tooling for day to day web dev tasks - Password generator" />
<Meta Property="keywords" Content="password, generator, password generator, random, random password, random password generator" />
<Title Value="WebDevTool.eu - Password generator"></Title>

<div class="content-container-div">
    <h1>Password generator</h1>
    <div>
        <div class="row">
            <div class="col">Length</div>
            <div class="col"><input id="iPasswordLength" @bind="passwordLength" type="number" min="6" max="50" /></div>
        </div>

        <div class="row">
            <div class="col">Use numbers</div>
            <div class="col"><input type="checkbox" @bind="isUseNumbers" /></div>
        </div>

        <div class="row">
            <div class="col">Use symbols</div>
            <div class="col"><input type="checkbox" @bind="isUseSymbols" /></div>
        </div>

        <div class="row">
            <div class="col">Use lowercase letters</div>
            <div class="col"><input type="checkbox" @bind="isUseLowerCase" /></div>
        </div>

        <div class="row">
            <div class="col">Use uppercase letters</div>
            <div class="col"><input type="checkbox" @bind="isUseUpperCase" /></div>
        </div>

        <div class="row">
            <div class="col"><textarea class="w-100" id="taGeneratedGuids" @bind="generatedPassword" rows="5"></textarea></div>
        </div>

    </div>


    <button class="btn btn-primary me-3" @onclick="btGenerate_onclick">Generate</button>
    <button class="btn btn-primary" @onclick="CopyToClipboard">Copy to clipboard</button>

    <ModalPopup @ref="notificationModalPopup" ModalText="Successfully copied to clipboard!">
    </ModalPopup>

    @code {
        int passwordLength = 10;
        bool isUseNumbers = true;
        bool isUseSymbols = true;
        bool isUseLowerCase = true;
        bool isUseUpperCase = true;

        string generatedPassword = "";

        Random rnd = new Random();

        private string numbers = "0123456789";
        private string lowercase = "abcdefghijklmnopqrstuvwxyz";
        private string uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        private string specialChars = "!\"#$%&'()*+,-./\\";

        ModalPopup notificationModalPopup;

        void btGenerate_onclick()
        {
            string valid = (isUseNumbers ? numbers : "") + (isUseSymbols ? specialChars : "") + (isUseLowerCase ? lowercase : "") + (isUseUpperCase ? uppercase : "");
            StringBuilder res = new StringBuilder();

            for (int i = 0; i < passwordLength; i++)
            {
                res.Append(valid[rnd.Next(valid.Length)]);
            }

            generatedPassword = res.ToString();
        }

        async Task CopyToClipboard()
        {
            await ClipboardService.WriteTextAsync(generatedPassword);

            await notificationModalPopup.Show(1000);
        }
    }
</div>